version: '3.7'

services:

  traefik:
    image: traefik:v2.1
    container_name: traefik
    restart: on-failure
    command:
      - "--log.level=${TRAEFIK_LOG_LEVEL}"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${HOST_IP}.nip.io`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  mysql:
    image: mariadb:10.4
    container_name: mysql
    volumes:
      - mysql_data:/var/lib/mysql
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: mysql --user=root --password=${MYSQL_ROOT_PASSWORD} --execute "show databases"
      interval: 5s
      timeout:  1s
      retries:  3
    ports:
      - 3306:3306

  phpmyadmin:
    image: nazarpc/phpmyadmin
    container_name: phpmyadmin
    restart: on-failure
    environment:
      UPLOAD_SIZE: 1G
      PMA_HOST: mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.${HOST_IP}.nip.io`)"
      - "traefik.http.routers.phpmyadmin.entrypoints=web"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
      - "traefik.http.services.phpmyadmin.loadbalancer.passhostheader=true"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: elasticsearch
    restart: on-failure
    depends_on:
      - mysql
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
      - "xpack.security.enabled=false"
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358"
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - "http.cors.allow-credentials=true"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      test: curl localhost:9200
      interval: 5s
      timeout:  1s
      retries:  3

  sense:
    image: s12v/sense
    container_name: sense
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sense.rule=Host(`sense.${HOST_IP}.nip.io`)"
      - "traefik.http.routers.sense.entrypoints=web"
      - "traefik.http.services.sense.loadbalancer.server.port=5601"
      - "traefik.http.services.sense.loadbalancer.passhostheader=true"

  rabbitmq:
    image: rabbitmq:3.8-management
    container_name: rabbitmq
    hostname: rabbit-node
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.${HOST_IP}.nip.io`)"
      - "traefik.http.routers.rabbitmq.entrypoints=web"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
      - "traefik.http.services.rabbitmq.loadbalancer.passhostheader=true"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=/

  maildev:
    image: djfarrelly/maildev
    container_name: maildev
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maildev.rule=Host(`maildev.${HOST_IP}.nip.io`)"
      - "traefik.http.routers.maildev.entrypoints=web"
      - "traefik.http.services.maildev.loadbalancer.server.port=80"
      - "traefik.http.services.maildev.loadbalancer.passhostheader=true"

  redis:
    image: redis:5-buster
    container_name: redis
    restart: on-failure
    command: redis-server --requirepass ${REDIS_PASSWORD}

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander
    restart: on-failure
    depends_on:
      - redis
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis-commander.rule=Host(`redis-commander.${HOST_IP}.nip.io`)"
      - "traefik.http.routers.redis-commander.entrypoints=web"
      - "traefik.http.services.redis-commander.loadbalancer.server.port=8081"
      - "traefik.http.services.redis-commander.loadbalancer.passhostheader=true"
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  sftp:
    container_name: sftp
    restart: always
    image: atmoz/sftp:debian
    volumes:
      - ${PWD}/ftp/share:/home/${FTP_USER}/share
    ports:
      - "2222:22"
    command: ${FTP_USER}:${FTP_PASSWORD}:1001:100

volumes:
  elasticsearch_data:
    driver: local
  mysql_data:
    driver: local
  sdc_data:
    driver: local
  rabbitmq_data:
    driver: local
  sftp-data:
    driver: local

networks:
  default:
    external:
      name: traefik
